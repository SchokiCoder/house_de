{ optional features
	-runtime menu creation		?
	-function pointer as entry cmd	?
	 (as an addition to the
	  shell string)
	
	-keybinds			.
		-number + key sys		.
		-bind display			.
		 (display characters,
		  that do not yet match a bind)
		-"gg" goto 1st entry		.
		-'g' goto entry			.
		-'G' goto last entry		.
}

{
	-arg a (print version, license, repo)	v
	
	-enforce yoda notation			v
	
	-reader sigint and sigtstp		v
	 just end reader
	
	-split struct "runtime" into structs	v
	 of data that relate to each other
	 "data flow rework"
	
	-string rework				.
		-as struct				v
		-realloc invalid old size		.
		 (reader very long text)
		-double free				.
		 (sigint while reader)
		-1st char missing			.
		 (all feedback)
	
	-remove draw_upper and draw_lower	.
	 from draw_reader and draw_menu
	
	-get stderr				.
	 (fork and exec-family didn't help)
		->print feedback accordingly		.
	 if ^this doesn't work, omit
	
	-return values				.
	-print message consistency		.
	 (format, stdout vs stderr)
	-std config				.
	 (with compiler warning when untouched)
	-manpage				.
	
	-v 1.0.0				.
}

--- Done ---

{
	-multiline feedback			v
		-> vertical scrolling			v
	
	-fix scroll limit			v
	-fix 1st line being just empty		v
	 when scrolled
	 (newline prepended at top)
	-fix str_lines not handling		v
	 empty strings

	-execute				v
		-keybind				v
		-get stdout				v
		-get stderr				x
		-print according to goal		x
	
	-remove manually set feedback		v
	 (in init_rt)

	-handle_key returns int for		v
	 continue flagging,
	 is it obsolete?
	 yes, was at end of
	 mainloop anyway lol.
	
	-stdout fgets stops at newline		v
	 use fread
	
	-long feedback reader			v
		-missing x counter reset		v
		 (causes scroll-up just hiding
		  top line
		  and unnecessary line breaks)
		 
		-prints beyond string len		v
		 until scroll
		 (just replace current with mem alloc)
	
		-new feedback doesnt replace old one	v
		-once reader is used, it will		v
		 always be used for feedback	

	-reader height awareness		v
	
	-reader is one line short at end	v

	-reader after scroll 1st line is	v
	 always empty
	
	-reader can overscroll past the		v
	 last line
	 rt->feedback_lines is too high
	 str_lines() missing x reset
	
	-reader 1st character missing		v
	
	-reader_scroll reset on exit		v
	
	-menu draw height awareness		v
	
	-vertical menu scrolling		v
	 cursor follow
	
	-handle any todos			v
	 or // comments
		
	-v 0.3.0				v
}

{
	-fix menu open using cursor=0	v
	-fix cursor down		v
	 using main menu bounds
	 
	-code restructuring		v

	-commands			v
		-"quit", "q", "exit"		v
		-number				v
		 (move entry cursor to num)
	
	-v 0.2.0			v
}

{
	-portability tests		v
	 works on openbsd and freebsd
	 via tcc
	 
	-feedback line			v
	-feedback color cfg		v
	-cmd line color cfg		v
	-draw simplicifcation		v
	-bg color			v
	-handle in src todos		v
	 (and // comments)
	-cmdline prepend string cfg	v
	-cmdline enter			v
	 (':')
	-cmdline leave			v
	 (ctl + 'c'; enter)

	-v 0.1.0			v
}

{
	-config struct			v
	-draw				v
	-get term size and print	v
	 amount of empty lines
	 accordingly
	-mainloop			v
		 
	-keyboard ctl			<-- rolled back
		-j, k (down, up)		v
			-cursor				v
				-int, cntl			v
				-draw				v
		-l, h (right, left)		v
			-menu pointer			v
			-menu switch			v
	
	-fixes				v
		-disable stdout buf		v
		-reset term x, y		v
		-clear then redraw		x

	-termbox			x
		-impl				v
		-multichar fixes		x
		 (middle score 'â€”')

	-rollback			v
	 (a8a4e09c4bd6dac4c7df99c131bcf9ca7d57d990)
	 
	-backport menu switch sys	v
	-clear screen			v
	-colors				v
	-hide terminal text cursor	v
	-draw menu cursor		v
	-colors in config		v

	-version option			v
	-v 0.0.1			v
}

